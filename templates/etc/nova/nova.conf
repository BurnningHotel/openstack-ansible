[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose={{ global_log_verbose }}

# Show debugging output in logs (sets DEBUG log level output)
debug={{ global_log_debug }}

sql_connection=mysql://nova:{{ nova_mysql_password }}@{{ mysql_host }}/nova
my_ip={{ hostvars[ansible_hostname]|find_ip(management_network) }}
rabbit_host={{ rabbit_host }}
rabbit_userid=nova
rabbit_password={{ nova_rabbit_password }}
rabbit_virtual_host=/nova
auth_strategy=keystone

# These must be set, otherwise they will default to where the code is
# # located, which isn't writeable by the nova user that runs the services
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova

# Networking
libvirt_use_virtio_for_bridges=True
network_api_class=nova.network.quantumv2.api.API
quantum_url={{ quantum_internal_url }}
quantum_auth_strategy=keystone
quantum_admin_tenant_name=service
quantum_admin_username=quantum
quantum_admin_password={{ quantum_identity_password }}
quantum_admin_auth_url={{ keystone_admin_url }}
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
linuxnet_interface_driver=nova.network.linux_net.LinuxOVSInterfaceDriver  

# Security Groups                                    
firewall_driver=nova.virt.firewall.NoopFirewallDriver
security_group_api=quantum                           
                                                     
# Metadata                                           
quantum_metadata_proxy_shared_secret={{ metadata_proxy_shared_secret }}
service_quantum_metadata_proxy=true

# Compute
compute_driver=libvirt.LibvirtDriver
connection_type=libvirt 

# Cinder
volume_api_class=nova.volume.cinder.API

# Glance
glance_api_servers={{ glance_endpoint_host }}:9292
image_service=nova.image.glance.GlanceImageService

# novnc
novnc_enable=true             
novncproxy_port=6080          
novncproxy_host={{ hostvars[ansible_hostname]|find_ip(management_network) }}
vncserver_listen={{ hostvars[ansible_hostname]|find_ip(management_network) }}
